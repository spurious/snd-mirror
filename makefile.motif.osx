# this is just an example of how to edit the output of the
#   configure script to get Snd to load -- you'll need to
#   fix up paths to reflect your own setup, of course.

CC = gcc
DEFS = -DHAVE_CONFIG_H
CFLAGS = -I. -g -O2
LDFLAGS = 
LIBS =  

GUILE_LIBS = -L/usr/local/lib -lguile -lm -lguile-ltdl -ldl
# GUILE_LIBS = -L/usr/local/lib -lguile -lm
XM_LIBS = -L/usr/local/lib -lguile -lm
GUILE_CFLAGS = -I/usr/local/include
GTK_CFLAGS = 
GTK_LIBS = 
MOTIF_LIBS =  -L/usr/X11R6/lib  -lSM -lICE /usr/local/lib/libXm.a /usr/X11R6/lib/libXp.a /usr/X11R6/lib/libXt.a -lXext -lXpm -lX11
# MOTIF_LIBS =  -L/usr/X11R6/lib  -lSM -lICE -lXm -lXt -lX11  -lXext -lXp -lXpm
MOTIF_FLAGS =  -I/usr/X11R6/include
AUDIO_LIB = -framework CoreAudio -framework CoreFoundation -framework CoreMIDI
XMHTML_LIB = 
GTKHTML_LIB = 
GTKHTML_FLAGS = 
GSL_LIBS = -L/Users/bill/test/lib -lgsl -lgslcblas -lm
GSL_FLAGS = -I/Users/bill/test/include
GL_LIBS = 
GL_FILES = 
GL_FLAGS = 
FFTW_LIBS = -lrfftw -lfftw
SNDLIB_FILES = $(SNDLIB_O_FILES)
SNDLIB_LIB = 

GX_HEADERS = $(SND_X_HEADERS)
GX_FILES = $(X_O_FILES)

LDSO_FLAGS = 
SO_INSTALL = install
SO_LD = ld
A_LD = ld
A_LD_FLAGS = 

SHELL = /bin/sh
top_srcdir = .
DESTDIR =
PACKAGE = snd
VERSION = 6.6
datadir = ${prefix}/share
localedir = $(datadir)/locale
DEFS = -DLOCALEDIR=\"$(localedir)\" -DHAVE_CONFIG_H
SUBDIRS = po

.c.o:
	$(CC) -c $(DEFS) $(GTK_CFLAGS) $(CFLAGS) $(GUILE_CFLAGS) $(MOTIF_FLAGS) $(GSL_FLAGS) $(GTKHTML_FLAGS) $(GL_FLAGS) $<

INSTALL = /usr/bin/install -c
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
prefix = /usr/local
exec_prefix = ${prefix}
bindir = ${exec_prefix}/bin
srcdir = .
mandir = ${prefix}/man


include $(srcdir)/makesnd.files

main_target: snd

snd: $(SNDLIB_HEADERS) $(SND_HEADERS) $(GX_HEADERS) $(SNDLIB_FILES) $(O_FILES) $(GX_FILES) $(GL_FILES)
	(cd po && $(MAKE))
	$(CC) $(LDFLAGS) $(CFLAGS) $(SNDLIB_FILES) $(O_FILES) $(GX_FILES) $(GL_FILES) -o snd $(SNDLIB_LIB) $(GUILE_LIBS) $(GTK_LIBS) $(GL_LIBS) $(MOTIF_LIBS) $(AUDIO_LIB) $(FFTW_LIBS) $(GSL_LIBS) $(XMHTML_LIB) $(GTKHTML_LIB) $(LIBS)

xm: 	xen.h xen.o
	$(CC) -c xm.c -DUNDEF_USE_SND $(DEFS) $(GTK_CFLAGS) $(CFLAGS) $(GUILE_CFLAGS) $(MOTIF_FLAGS) $(GSL_FLAGS) $(GTKHTML_FLAGS) $(GL_FLAGS)
	$(SO_LD) xen.o $(GM_FILES) -o $(GM_SO_FILE) $(LDSO_FLAGS) $(XM_LIBS) $(GL_LIBS) $(MOTIF_LIBS) $(LIBS)

xg: 	xen.h xen.o
	$(CC) -c xg.c -DUNDEF_USE_SND $(DEFS) $(GTK_CFLAGS) $(CFLAGS) $(GUILE_CFLAGS) $(MOTIF_FLAGS) $(GSL_FLAGS) $(GTKHTML_FLAGS) $(GL_FLAGS)
	$(SO_LD) xen.o $(GG_FILES) -o $(GG_SO_FILE) $(LDSO_FLAGS) $(GTK_LIBS) $(LIBS)

widget: snd_widget.o

snd_widget.o: $(SNDLIB_HEADERS) $(SND_HEADERS) $(GX_HEADERS) $(SNDLIB_FILES) $(O_FILES) $(GX_FILES) $(GL_FILES)
	$(LD) -r $(LDFLAGS) $(SNDLIB_FILES) $(O_FILES) $(GX_FILES) $(GL_FILES) -o snd_widget.o

include $(srcdir)/makesnd.back

Makefile: Makefile.in config.status
	./config.status

config.status: configure
	./config.status --recheck

configure: configure.in
	cd $(srcdir); autoconf


# the order GUILE_LIBS then GTK_LIBS (and possibly others) can cause trouble because
#   GUILE_LIBS may start with -L/usr/local/lib, whereas GTK_LIBS leaves off the
#   directory, but assumes /usr/lib.  An older version sitting on /usr/local/lib
#   will therefore get accidentally loaded.  I fear the only fix is to delete the
#   libraries on /usr/local/lib.

