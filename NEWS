Snd 9.12

more rt/faust/stalin improvements from Kjetil.

moved sine-bank to snd9.scm 

2 more generators in generators.scm (tanhsin, moving-spectrum)

tools/numtst.c which generates a Scheme numerics test suite
  also tools/clisp-number|other-tests.scm (taken from Clisp)

A new extension language choice: S7, a TinyScheme derivative.
  This is a small (ca. 10000 lines), source-level embedded 
  interpreter (like gnulib -- no libraries, no run-time init files)
  that has full continuations, ratios and complex numbers, 
  generalized set!, applicable objects, hash-tables and keywords
  (the latter for define*), defmacro, define-macro, and procedure-with-setter.
  My goal is a flexible, multithreadable, simple, possibly even 
  real-time extension language that I can change to suit myself.
  S7 is not Scheme++ -- I have removed the notion of an "inexact integer",
  so truncate, floor, and ceiling return (exact) integers,
  and rationalize (which uses continued fractions) returns
  (exact) ratios.  I've added call-with-exit for light-weight
  continuations (equivalent to a goto, or return in C).
  S7 is reasonably fast (it can outperform both Guile
  and Gauche if I get to choose the benchmark), and is 
  compatible with Snd's run macro, so the only real bottleneck
  is that macro expansion is slow.  It passes Jaffer's r4rs tests,
  and most of the r6rs number tests mentioned above. I haven't had 
  time yet to implement threads.

Mike Scholz helped me with S7 and improved some of the ruby files.

checked: gtk+-2.13.5|6|7, sbcl 1.0.19|20

Thanks!: Kjetil, Bret Battey, Hayahiko Moro, Mike.

