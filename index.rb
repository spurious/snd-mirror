# Snd documentation index (generated by index.cl)

$html_reader = "netscape"
$html_dir = nil

# html :play or html "play"  ==> the whole string must match
# html(/^play$/)             ==> regexp search

def html(str)
#  url = if str.class == Regexp
#          Snd_names_and_urls.detect do |x| x[0] =~ /#{str}/ end
#        else
#          snd_url(str.to_s)
#        end
# regexp arg not implemented yet
  url = snd_url(str.to_s)
  if url
    goto_html(url)
    url
  else
    snd_print "no url for #{str}?"
    false
  end
rescue
  snd_error "html(#{str}): #$!"
end

def help(str)
  s = html(str)
  snd_help(str) or snd_help(s)
rescue
  snd_error "help(#{str}): #$!"
end

def goto_html(url)
  dir = if File.exists?("snd.html")
          Dir.pwd
        elsif File.exists?("/usr/share/doc/snd-6/snd.html")
          "/usr/share/doc/snd-6"
        elsif File.exists?("/usr/doc/snd-6/snd.html")
          "/usr/doc/snd-6"
        elsif File.exists?("/usr/doc/snd-5/snd.html")
          "/usr/doc/snd-5"
        elsif defined?($html_dir) and $html_dir and File.exists?($html_dir)
          $html_dir
        else
          false
        end
  if dir
    if $html_reader == "netscape"
      send_netscape(dir + "/" + url)
    else
      system($html_reader + " file:" + dir + "/" + url)
    end
  else
    snd_print("snd.html not found; set $html_dir to appropriate path!")
  end
rescue
  snd_error "goto_html(#{url}): #$!"
end

