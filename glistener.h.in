#ifndef GLISTENER_H
#define GLISTENER_H

#include <ctype.h>
#include <stddef.h>
#include <math.h>
#include <stdio.h>
#include <unistd.h>
#include <signal.h>
#include <limits.h>
#include <errno.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include <sys/types.h>
#include <stdbool.h>

#include <gtk/gtk.h>

#undef HAVE_GTK_3


#if HAVE_GTK_3
  #include <gdk/gdk.h>
#else
  #include <gdk/gdkkeysyms.h>
#endif


void glistener_set_prompt(const char *str);
void glistener_clear(void);
bool glistener_write(FILE *fp);
bool glistener_write_to_file(const char *filename);
void glistener_scroll_to_end(void);
void glistener_append_text(const char *msg);
void glistener_set_prompt_tag(GtkTextTag *m);
void glistener_set_font(PangoFontDescription *font);
#if (!HAVE_GTK_3)
void glistener_set_text_color(GdkColor *p);
void glistener_set_background_color(GdkColor *p);
#else
void glistener_set_text_color(GdkRGBA *p);
void glistener_set_background_color(GdkRGBA *p);
#endif
GtkWidget *glistener_new(GtkWidget *parent, void (*initializations)(GtkWidget *new_listener));
void glistener_set_cursor_shape(GdkCursor *cursor_shape);
void glistener_append_prompt(void);


/* temporary */
GtkWidget *glistener_text(void);
GtkTextBuffer *glistener_buffer(void);
void glistener_set_wait_cursor_shape(GdkCursor *wait);
void glistener_set_normal_cursor_shape(GdkCursor *arrow);
void glistener_set_symbol_completer(void (*completer)(bool (*symbol_func)(const char *symbol_name, void *data), void *data));
void glistener_set_help(const char *(*help)(const char *text));
void glistener_set_evaluator(void (*eval)(const char *text));

#endif
